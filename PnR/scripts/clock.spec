###############################################################
#  Generated by:      Cadence Innovus 16.10-p004_1
#  OS:                Linux x86_64(Host ID CadenceServer3.localdomain)
#  Generated on:      Wed Jun 14 15:49:29 2023
#  Design:            TOP
#  Command:           create_ccopt_clock_tree_spec -file ./scripts/clock.spec
###############################################################
#-------------------------------------------------------------------------------
# Clock tree setup script - dialect: Innovus
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------

namespace eval ::ccopt {}
namespace eval ::ccopt::ilm {}
set ::ccopt::ilm::ccoptSpecRestoreData {}
# Start by checking for unflattened ILMs.
# Will flatten if so and then check the db sync.
if { [catch {ccopt_check_and_flatten_ilms_no_restore}] } {
  return -code error
}
# cache the value of the restore command output by the ILM flattening code
set ::ccopt::ilm::ccoptSpecRestoreData $::ccopt::ilm::ccoptRestoreILMState

# Clocks present at pin clk
#   func_clk (period 5.000ns) in timing_config func([TOP_m.sdc])
create_ccopt_clock_tree -name func_clk -source clk -no_skew_group

# Clock period setting for source pin of func_clk
set_ccopt_property clock_period -pin clk 5

# Skew group to balance non generated clock:func_clk in timing_config:func (sdc TOP_m.sdc)
create_ccopt_skew_group -name func_clk/func -sources clk -auto_sinks
set_ccopt_property include_source_latency -skew_group func_clk/func true
set_ccopt_property extracted_from_clock_name -skew_group func_clk/func func_clk
set_ccopt_property extracted_from_constraint_mode_name -skew_group func_clk/func func
set_ccopt_property extracted_from_delay_corners -skew_group func_clk/func {WC_rcworst125.setup BC_rcbest0.hold}


check_ccopt_clock_tree_convergence
# Restore the ILM status if possible
if { [get_ccopt_property auto_design_state_for_ilms] == 0 } {
  if {$::ccopt::ilm::ccoptSpecRestoreData != {} } {
    eval $::ccopt::ilm::ccoptSpecRestoreData
  }
}

